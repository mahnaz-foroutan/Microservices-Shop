version: '3.4'

services:
  catalogdb:
    container_name: projcatalogdb
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"

  basketdb:
    container_name: projbasketdb
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:basketdb:6379
      - HTTP_USER=root
      - HTTP_PASSWORD=secret
    ports:
      - 8081:8081
    depends_on:
      - basketdb

  discountdb:
    container_name: projdiscountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  orderdb:
    container_name: projorderdb
    environment:
      SA_PASSWORD: "sa_12345"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1433:1433"
 

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aspnetrun.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  mongoclient:
    container_name: mongoclient
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - catalogdb


  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000" 
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    
  catalog.api:
    container_name: projcatalog.api
    restart: always 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - catalogdb
    ports:
      - "8000:80"

  basket.api:
    container_name: projbasket.api
    restart: always 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "GrpcSettings:DiscountUrl=http://discount.grpc"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on: 
      - basketdb
      - rabbitmq
    ports:
      - "8001:80"

  discount.grpc:
    container_name: discount.grpc
    restart: always 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    ports:
      - "8003:80"
    depends_on:
      - discountdb

  ordering.api:
    container_name: ordering.api
    restart: always 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=sa_12345;"
      - "ConnectionStrings:IdentityConnection=Server=orderdb;Database=IdentityDb;User Id=sa;Password=sa_12345;"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "8004:80"


  ocelotapigw:
    container_name: ocelotapigw
    restart: always 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - catalog.api
      - basket.api
      - ordering.api
    ports:
      - "8010:80"

  shopping.aggregator:
    container_name: shopping.aggregator
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ApiSettings:CatalogUrl=http://catalog.api"
      - "ApiSettings:BasketUrl=http://basket.api"
      - "ApiSettings:OrderingUrl=http://ordering.api"
    depends_on:
      - catalog.api
      - basket.api
      - ordering.api
    ports:
      - "8005:80"

  elasticsearch:
    container_name: elasticsearch
    restart: always 
    environment:
    
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
      
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data   
    networks:
       - elasticnet
  kibana:
    container_name: kibana
    restart: always 
    environment:        
        - ELASTICSEARCH_URL=http://elasticsearch:9200
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - "5601:5601"  
    networks:
       - elasticnet
  
 